Dailycov3 <- Dailycov3 [,-1]
View(Dailycov3)
preproDaily <-preProcess(Dailycov3[,], method = c("knnImpute"))
Dailycov3<-predict(preproDaily, Dailycov3)
install.packages("RANN")
preproDaily <-preProcess(Dailycov3[,], method = c("knnImpute"))
Dailycov3<-predict(preproDaily, Dailycov3)
View(Dailycov3)
Julian<-Dailycov3[,1:3]
Max.hum<-Dailycov3[,4:6]
Max.temp<-Dailycov3[,7:9]
Mean.hum<-Dailycov3[,10:12]
Mean.temp<-Dailycov3[,13:15]
Min.hum<-Dailycov3[,16:18]
Min.temp<-Dailycov3[,19:21]
Sd.hum<-Dailycov3[,22:24]
Sd.temp<-Dailycov3[,25:27]
Dailycov3<- list(Julian,Max.hum, Max.temp, Mean.hum,Mean.temp, Min.hum, Min.temp, Sd.hum, Sd.temp)
names(Dailycov3) <- c("Julian", "Maxhum","Maxtemp","Meanhum", "Meantemp","Minhum","Mintemp","sdhum","sdtemp")
BatOccu <- read.csv("~/Documents/PlumasBatsApp/BatOccu.csv")
library(unmarked)
BatOccuMyYu<-BatOccu[,2:4]
SimOccuMyYu2<-unmarkedFrameOccu(y = BatOccuMyYu, siteCovs =sampling.cov2, obsCovs=Dailycov3)
model.Occu1.My.Yu2 <- occu(~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2),SimOccuMyYu2)
modle.Occu1.My.Yu2
model.Occu1.My.Yu2
?dredge
colnames(sampling.cov2)
model.Occu1.My.Yu2 <- occu(~ I(Julian^2) + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2) + Distance.to.water + I(Distance.to.water^2) + Distance.to.road + I(Distance.to.road^2) + Existing.vegetation +I(Existing.vegetation^2) + Altitude + I(ALtitude^2),SimOccuMyYu2)
model.Occu1.My.Yu2 <- occu(~ I(Julian^2) + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2) + Distance.to.water + I(Distance.to.water^2) + Distance.to.road + I(Distance.to.road^2) + Existing.vegetation +I(Existing.vegetation^2) + Altitude + I(Altitude^2),SimOccuMyYu2)
select.My.Yu2 <- dredge(model.Occu1.My.Yu2, rank = "AICc")
library(unmarked)
library(parallel)
library(foreach)
library(doParallel)
cl <- makeCluster(detectCores() - 1)
select.My.Yu2 <- pdredge(model.Occu1.My.Yu2, cluster=cl, rank = "AICc", , subset["Burn.intensity.soil", "Burn.intensity.Canopy", "Burn.intensity.basal"] == FALSE )
select.My.Yu2 <- pdredge(model.Occu1.My.Yu2, cluster=cl, rank = "AICc",subset["Burn.intensity.soil", "Burn.intensity.Canopy", "Burn.intensity.basal"] == FALSE )
select.My.Yu2 <- pdredge(model.Occu1.My.Yu2, cluster=cl, rank = "AICc")
stopCluster(cl)
demo(dredge.subset)
library(latticeExtra)
library(dplyr)
library(knitr)
library(unmarked)
library(lubridate)
library(stargazer)
library(xtable)
library(MuMIn)
library(ggplot2)
library(RCurl)
library(foreign)
library(caret)
sampling.cov2 <- read.csv("~/Documents/PlumasBatsApp/sampling.cov2.csv")
sampling.cov2<- sampling.cov2[,-1]
sampling.cov2<- data.frame(sampling.cov2)
preprocov <-preProcess(sampling.cov2[,1:8], method = c("center","scale"))
sampling.cov2<-predict(preprocov, sampling.cov2[,1:8])
Dailycov3 <- read.csv("~/Documents/PlumasBatsApp/Dailycov3.csv")
Dailycov3 <- Dailycov3 [,-1]
preproDaily <-preProcess(Dailycov3[,], method = c("knnImpute"))
Dailycov3<-predict(preproDaily, Dailycov3)
Julian<-Dailycov3[,1:3]
Max.hum<-Dailycov3[,4:6]
Max.temp<-Dailycov3[,7:9]
Mean.hum<-Dailycov3[,10:12]
Mean.temp<-Dailycov3[,13:15]
Min.hum<-Dailycov3[,16:18]
Min.temp<-Dailycov3[,19:21]
Sd.hum<-Dailycov3[,22:24]
Sd.temp<-Dailycov3[,25:27]
Dailycov3<- list(Julian,Max.hum, Max.temp, Mean.hum,Mean.temp, Min.hum, Min.temp, Sd.hum, Sd.temp)
names(Dailycov3) <- c("Julian", "Maxhum","Maxtemp","Meanhum", "Meantemp","Minhum","Mintemp","sdhum","sdtemp")
#Pred.DF<-predict(preprocov, new=Pred.DF)
BatOccu <- read.csv("~/Documents/PlumasBatsApp/BatOccu.csv")
library(unmarked)
library(parallel)
library(foreach)
library(doParallel)
cl <- makeCluster(detectCores() - 1)
BatOccuMyYu<-BatOccu[,2:4]
SimOccuMyYu2<-unmarkedFrameOccu(y = BatOccuMyYu, siteCovs =sampling.cov2, obsCovs=Dailycov3)
model.Occu1.My.Yu2 <- occu(~ I(Julian^2) + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2) + Distance.to.water + I(Distance.to.water^2) + Distance.to.road + I(Distance.to.road^2) + Existing.vegetation +I(Existing.vegetation^2) + Altitude + I(Altitude^2),SimOccuMyYu2)
select.My.Yu2 <- pdredge(model.Occu1.My.Yu2, cluster=cl, rank = "AICc")
stopCluster(cl)
best2.My.Yu2<-get.models(select.My.Yu2, 1)[[1]]
library(unmarked)
BatOccuMyYu<-BatOccu[,2:4]
SimOccuMyYu2<-unmarkedFrameOccu(y = BatOccuMyYu, siteCovs =sampling.cov2, obsCovs=Dailycov3)
model.Occu1.My.Yu2 <- occu(~ I(Julian^2) + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Distance.to.water + I(Distance.to.water^2) + Distance.to.road + I(Distance.to.road^2) + Existing.vegetation +I(Existing.vegetation^2) + Altitude + I(Altitude^2),SimOccuMyYu2)
select.My.Yu2 <- pdredge(model.Occu1.My.Yu2, cluster=cl, rank = "AICc")
library(unmarked)
BatOccuMyYu<-BatOccu[,2:4]
SimOccuMyYu2<-unmarkedFrameOccu(y = BatOccuMyYu, siteCovs =sampling.cov2, obsCovs=Dailycov3)
model.Occu1.My.Yu2 <- occu(~ I(Julian^2) + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Distance.to.water + I(Distance.to.water^2) + Distance.to.road + I(Distance.to.road^2) + Existing.vegetation +I(Existing.vegetation^2) + Altitude + I(Altitude^2),SimOccuMyYu2)
select.My.Yu2 <- dredge(model.Occu1.My.Yu2, rank = "AICc")
best2.My.Yu2<-get.models(select.My.Yu2, 1)[[1]]
library(texreg)
screenreg(extract(subset(select.My.Yu2, delta <= 2, recalc.weights = FALSE)))
texreg(extract(subset(select.My.Yu2, file = "myyu.txt", delta <= 2, recalc.weights = FALSE)))
texreg(extract(subset(select.My.Yu2, file = "myyu.doc", delta <= 2, recalc.weights = FALSE)))
screenreg(extract(subset(select.My.Yu2, file = "myyu.doc", delta <= 2, recalc.weights = FALSE)))
best2.My.Yu2
select.My.Yu2
names(select.My.Yu2)
screenreg(extract(subset(select.My.Yu2, delta <= 2, recalc.weights = FALSE)))
screenreg(extract(subset(select.My.Yu2, delta <= 2, recalc.weights = FALSE)), file="myyu.txt")
screenreg(extract(subset(select.My.Yu2, delta <= 0.5, recalc.weights = FALSE)), file="myyu.txt")
#N=49
BatOccuMyCa<-BatOccu[,5:7]
SimOccuMyCa2<-unmarkedFrameOccu(y = BatOccuMyCa, siteCovs =sampling.cov2, obsCovs=Dailycov3)
model.Occu1.My.Ca2 <- occu(~ I(Julian^2) + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Distance.to.water + I(Distance.to.water^2) + Distance.to.road + I(Distance.to.road^2) + Existing.vegetation +I(Existing.vegetation^2) + Altitude + I(Altitude^2), SimOccuMyCa2)
select.My.Ca2 <- dredge(model.Occu1.My.Ca2, rank = "AICc")
best2.My.Ca2<-get.models(select.My.Ca2, 1)[[1]]
library(texreg)
screenreg(extract(subset(select.My.Ca2, delta <= 1, recalc.weights = FALSE)), file="myca.txt")
##Western Small Footed Myotis (*Myotis ciliolabrum*)
BatOccuMyCi<-BatOccu[,8:10]
SimOccuMyCi2<-unmarkedFrameOccu(y = BatOccuMyCi, siteCovs =sampling.cov2, obsCovs=Dailycov3)
model.Occu1.My.Ci2 <- occu(~ Julian+ Meanhum + Meantemp + sdhum + sdtemp ~ ~ I(Julian^2) + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Distance.to.water + I(Distance.to.water^2) + Distance.to.road + I(Distance.to.road^2) + Existing.vegetation +I(Existing.vegetation^2) + Altitude + I(Altitude^2), SimOccuMyCi2)
select.My.Ci2 <- dredge(model.Occu1.My.Ci2, rank = "AICc")
best2.My.Ci2<-get.models(select.My.Ci2, 1)[[1]]
screenreg(extract(subset(select.My.Ci2, delta <= 2, recalc.weights = FALSE)), file= "myci.txt")
best2.My.Ca2
occu(formula = ~Meanhum + 1 ~ Altitude + I(Altitude^2) + Distance.to.road +
1, data = SimOccuMyCa2)
occu(formula = ~Meanhum + 1 ~ Altitude + I(Altitude^2) + Distance.to.road +
1, data = SimOccuMyCa2)
siteCovs
siteCovs2
sampling.cov2
colnames(sampling.cov2)
best2.My.Ca2
colnames(sampling.cov2)
summary(sampling.cov2)
summary(sampling.cov2)
new.data<-mean(sampling.cov2)
new.data
str(sampling.cov2)
mean(sampling.cov2)
?mean
mean(sampling.cov2, na.rm=TRUE)
?mutate
sampling.cov2
colnames(sampling.cov2)
new.data<- transmute(sampling.cov2, Distance.to.water=mean(Distance.to.water),  Distance.to.road = mean(Distance.to.road),  Existing.vegetation = mean(Existing.vegetation), Fire.Interval= mean(Fire.Interval), Altitude= mean(Altitude), Burn.intensity.Canopy = mean(Burn.intensity.Canopy))
new.data
View(new.data)
?summarize
new.data <-  new.data[1,]
new.data<- transmute(sampling.cov2, Distance.to.water=mean(Distance.to.water),  Distance.to.road = mean(Distance.to.road),  Existing.vegetation = mean(Existing.vegetation), Fire.Interval= mean(Fire.Interval, na.rm = TRUE), Altitude= mean(Altitude), Burn.intensity.Canopy = mean(Burn.intensity.Canopy))
new.data <-  new.data[1,]
new.data
?predict
?predict
predict(best2.My.Ca2, new.data)
predict(best2.My.Ca2, , type = "state", newdata=new.data)
predict(best2.My.Ca2, , type = "state", newdata=new.data)
predict(best2.My.Ca2, , type = "state", new.data)
predict(best2.My.Ca2, type = "state", new.data)
predict(best2.My.Ca2, type = "state", new.data)$Predicted
pred.My.Ca <-predict(best2.My.Ca2, type = "state", new.data)$Predicted
pred.My.Yu <-predict(best2.My.Yu2, type = "state", new.data)$Predicted
pred.My.Ca <-predict(best2.My.Ca2, type = "state", new.data)$Predicted
pred.My.Yu
Species <- c("Myca", "Myyu")
Prediction <- c(pred.My.Ca, pred.My.Yu)
ggplot(x=Species, y=Prediction) + geom_bar()
ggplot(x=Species, y=Prediction) + geom_point()
ggplot(x=Species, y=Prediction) + geom_point(x=Species, y=Prediction)
DF <-cbind(Species, Prediction)
ggplot(DF, aes(x=Species, y=Prediction)) + geom_point()
class(DF)
DF <-data.frame(cbind(Species, Prediction))
ggplot(DF, aes(x=Species, y=Prediction)) + geom_point()
ggplot(DF, aes(x=Species, y=Prediction)) + geom_bar()
ggplot(DF, aes(x=Species, y=Prediction)) + geom_point()
predict(best2.My.Ca2, type = "state", new.data)
library(latticeExtra)
library(dplyr)
library(knitr)
library(unmarked)
library(lubridate)
library(stargazer)
library(xtable)
library(MuMIn)
library(ggplot2)
library(RCurl)
library(foreign)
library(caret)
predict(best2.My.Ca2, type = "state", new.data)
pred.My.Ca <-predict(best2.My.Ca2, type = "state", new.data)$Predicted
SE.My.Ca <-predict(best2.My.Ca2, type = "state", new.data)$SE
pred.My.Yu <-predict(best2.My.Yu2, type = "state", new.data)$Predicted
SE.My.Yu <-predict(best2.My.Yu2, type = "state", new.data)$SE
Species <- c("Myca", "Myyu")
Prediction <- c(pred.My.Ca, pred.My.Yu)
SE<-c(SE.My.Ca, SE.My.Yu)
DF <-data.frame(cbind(Species, Prediction))
Bats.plot <- barplot(pred.My.Ca, ylim=c(0, 1), xlab=NULL, ylab="Occupancy")
axis(1, labels= c("Myca", "Myyu"), at = toritos.plot)
Bats.plot <- barplot(Prediction, ylim=c(0, 1), xlab=NULL, ylab="Occupancy")
axis(1, labels= c("Myca", "Myyu"), at = toritos.plot)
axis(1, labels= c("Myca", "Myyu"), at = Bats.plot)
a <- matrix(c(110.6971, 52.93513, 52.44917, 132.36302),4)
a
a <- matrix(SE,2)
a
segments(Batss.plot, Prediction - stDevs.t, Bats.plot, Prediction + stDevs.t, lwd=2)
segments(Bats.plot, Prediction - stDevs.t, Bats.plot, Prediction + stDevs.t, lwd=2)
stDevs.t <- matrix(SE,length(SE))
segments(Bats.plot, Prediction - stDevs.t, Bats.plot, Prediction + stDevs.t, lwd=2)
segments(Bats.plot - 0.1, Prediction - stDevs.t, Bats.plot + 0.1, Prediction - stDevs.t, lwd=2)
segments(Bats.plot - 0.1, Prediction + stDevs.t, Bats.plot + 0.1, Prediction + stDevs.t, lwd=2)
sc <- read.csv("~/Documents/PlumasBatsApp/sampling.cov2.csv")
summary(sc)
summary(sampling.cov2)
summary(sc)
?data.frame
summary(sc)
summary(sampling.cov2)
summary(sc)
shiny::runApp()
shiny::runApp()
best2.My.Yu2
best2.My.Ca2
shiny::runApp()
shiny::runApp()
?shiny
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
a<-c(1:8)
a
t(a)
colnames(a)<- c("Distance.to.water", "Distance.to.road", "Existing.vegetation", "Fire.Interval", "Altitude","Burn.intensity.soil", "Burn.intensity.Canopy", "Burn.intensity.basal")
class(a)
class(data.frame(a))
a<-data.frame(a)
colnames(a)<- c("Distance.to.water", "Distance.to.road", "Existing.vegetation", "Fire.Interval", "Altitude","Burn.intensity.soil", "Burn.intensity.Canopy", "Burn.intensity.basal")
col.number
colnumber
dim(a)
a
a<-c(1:8)
a
data.frame(a)
a<- c(1:8)
a<-data.frame(a)
dim(a)
a<- c(1:8)
a<-data.frame(a)
a<-t(a)
dim(a)
a<- c(1:8)
a<-data.frame(a)
a<-t(a)
a<-data.frame(a)
dim(a)
a<- c(1:8)
a<-data.frame(a)
a<-t(a)
a<-data.frame(a)
dim(a)
colnames(a)<- c("Distance.to.water", "Distance.to.road", "Existing.vegetation", "Fire.Interval", "Altitude","Burn.intensity.soil", "Burn.intensity.Canopy", "Burn.intensity.basal")
colnames(a)<- ca
a
shiny::runApp()
a<- c(1:8)
a<-data.frame(a)
a<-t(a)
a<-data.frame(a)
dim(a)
colnames(a)<- c("Distance.to.water", "Distance.to.road", "Existing.vegetation", "Fire.Interval", "Altitude","Burn.intensity.soil", "Burn.intensity.Canopy", "Burn.intensity.basal")
a
a<- c(1:8)
a
a<-data.frame(a)
a
a<-t(a)
a
a<-data.frame(a)
dim(a)
colnames(a)<- c("Distance.to.water", "Distance.to.road", "Existing.vegetation", "Fire.Interval", "Altitude","Burn.intensity.soil", "Burn.intensity.Canopy", "Burn.intensity.basal")
a
rownames(a)<-NULL
a
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(latticeExtra)
library(dplyr)
library(knitr)
library(unmarked)
library(lubridate)
library(stargazer)
library(xtable)
library(MuMIn)
library(ggplot2)
library(RCurl)
library(foreign)
library(caret)
sampling.cov2 <- read.csv("~/Documents/PlumasBatsApp/sampling.cov2.csv")
sampling.cov2<- sampling.cov2[,-1]
sampling.cov2<- data.frame(sampling.cov2)
preprocov <-preProcess(sampling.cov2[,1:8], method = c("center","scale"))
sampling.cov2<-predict(preprocov, sampling.cov2[,1:8])
Dailycov3 <- read.csv("~/Documents/PlumasBatsApp/Dailycov3.csv")
Dailycov3 <- Dailycov3 [,-1]
preproDaily <-preProcess(Dailycov3[,], method = c("knnImpute"))
Dailycov3<-predict(preproDaily, Dailycov3)
Julian<-Dailycov3[,1:3]
Max.hum<-Dailycov3[,4:6]
Max.temp<-Dailycov3[,7:9]
Mean.hum<-Dailycov3[,10:12]
Mean.temp<-Dailycov3[,13:15]
Min.hum<-Dailycov3[,16:18]
Min.temp<-Dailycov3[,19:21]
Sd.hum<-Dailycov3[,22:24]
Sd.temp<-Dailycov3[,25:27]
Dailycov3<- list(Julian,Max.hum, Max.temp, Mean.hum,Mean.temp, Min.hum, Min.temp, Sd.hum, Sd.temp)
names(Dailycov3) <- c("Julian", "Maxhum","Maxtemp","Meanhum", "Meantemp","Minhum","Mintemp","sdhum","sdtemp")
BatOccu <- read.csv("~/Documents/PlumasBatsApp/BatOccu.csv")
library(unmarked)
BatOccuMyYu<-BatOccu[,2:4]
SimOccuMyYu2<-unmarkedFrameOccu(y = BatOccuMyYu, siteCovs =sampling.cov2, obsCovs=Dailycov3)
model.Occu1.My.Yu2 <- occu(~ I(Julian^2) + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Distance.to.water + I(Distance.to.water^2) + Distance.to.road + I(Distance.to.road^2) + Existing.vegetation +I(Existing.vegetation^2) + Altitude + I(Altitude^2),SimOccuMyYu2)
best2.My.Yu2<-occu(formula = ~1 ~ Altitude + I(Altitude^2) + I(Burn.intensity.Canopy^2) + I(Distance.to.road^2) + Existing.vegetation + I(Existing.vegetation^2) + 1, data = SimOccuMyYu2)
best2.My.Yu2
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(latticeExtra)
library(dplyr)
library(knitr)
library(unmarked)
library(lubridate)
library(stargazer)
library(xtable)
library(MuMIn)
library(ggplot2)
library(RCurl)
library(foreign)
library(caret)
sampling.cov2 <- read.csv("~/Documents/PlumasBatsApp/sampling.cov2.csv")
sampling.cov2<- sampling.cov2[,-1]
sampling.cov2<- data.frame(sampling.cov2)
preprocov <-preProcess(sampling.cov2[,1:8], method = c("center","scale"))
sampling.cov2<-predict(preprocov, sampling.cov2[,1:8])
Dailycov3 <- read.csv("~/Documents/PlumasBatsApp/Dailycov3.csv")
Dailycov3 <- Dailycov3 [,-1]
preproDaily <-preProcess(Dailycov3[,], method = c("knnImpute"))
Dailycov3<-predict(preproDaily, Dailycov3)
Julian<-Dailycov3[,1:3]
Max.hum<-Dailycov3[,4:6]
Max.temp<-Dailycov3[,7:9]
Mean.hum<-Dailycov3[,10:12]
Mean.temp<-Dailycov3[,13:15]
Min.hum<-Dailycov3[,16:18]
Min.temp<-Dailycov3[,19:21]
Sd.hum<-Dailycov3[,22:24]
Sd.temp<-Dailycov3[,25:27]
Dailycov3<- list(Julian,Max.hum, Max.temp, Mean.hum,Mean.temp, Min.hum, Min.temp, Sd.hum, Sd.temp)
names(Dailycov3) <- c("Julian", "Maxhum","Maxtemp","Meanhum", "Meantemp","Minhum","Mintemp","sdhum","sdtemp")
BatOccu <- read.csv("~/Documents/PlumasBatsApp/BatOccu.csv")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
sampling.cov2 <- read.csv("~/Documents/PlumasApp/PlumasBatsApp/sampling.cov2.csv")
View(sampling.cov2)
library(latticeExtra)
library(dplyr)
library(knitr)
library(unmarked)
library(lubridate)
library(stargazer)
library(xtable)
library(MuMIn)
library(ggplot2)
library(RCurl)
library(foreign)
library(caret)
sampling.cov2 <- read.csv("~/Documents/PlumasApp/PlumasBatsApp/sampling.cov2.csv")
sampling.cov2<- sampling.cov2[,-1]
sampling.cov2<- data.frame(sampling.cov2)
preprocov <-preProcess(sampling.cov2[,1:8], method = c("center","scale"))
sampling.cov2<-predict(preprocov, sampling.cov2[,1:8])
Dailycov3 <- read.csv("~/Documents/PlumasApp/PlumasBatsApp/Dailycov3.csv")
Dailycov3 <- Dailycov3 [,-1]
preproDaily <-preProcess(Dailycov3[,], method = c("knnImpute"))
Dailycov3<-predict(preproDaily, Dailycov3)
Julian<-Dailycov3[,1:3]
Max.hum<-Dailycov3[,4:6]
Max.temp<-Dailycov3[,7:9]
Mean.hum<-Dailycov3[,10:12]
Mean.temp<-Dailycov3[,13:15]
Min.hum<-Dailycov3[,16:18]
Min.temp<-Dailycov3[,19:21]
Sd.hum<-Dailycov3[,22:24]
Sd.temp<-Dailycov3[,25:27]
Dailycov3<- list(Julian,Max.hum, Max.temp, Mean.hum,Mean.temp, Min.hum, Min.temp, Sd.hum, Sd.temp)
names(Dailycov3) <- c("Julian", "Maxhum","Maxtemp","Meanhum", "Meantemp","Minhum","Mintemp","sdhum","sdtemp")
BatOccu <- read.csv("~/Documents/PlumasApp/PlumasBatsApp/BatOccu.csv")
shiny::runApp()
sampling.cov2 <- read.csv("~/Documents/PlumasApp/PlumasBatsApp/sampling.cov2.csv")
sampling.cov2<- sampling.cov2[,-1]
sampling.cov2<- data.frame(sampling.cov2)
summary(sampling.cov2)
shiny::runApp()
sampling.cov2 <- read.csv("~/Documents/PlumasApp/PlumasBatsApp/sampling.cov2.csv")
sampling.cov2<- sampling.cov2[,-1]
sampling.cov2<- data.frame(sampling.cov2)
preprocov <-preProcess(sampling.cov2[,1:8], method = c("center","scale"))
sampling.cov2<-predict(preprocov, sampling.cov2[,1:8])
Dailycov3 <- read.csv("~/Documents/PlumasApp/PlumasBatsApp/Dailycov3.csv")
Dailycov3 <- Dailycov3 [,-1]
preproDaily <-preProcess(Dailycov3[,], method = c("knnImpute"))
Dailycov3<-predict(preproDaily, Dailycov3)
Julian<-Dailycov3[,1:3]
Max.hum<-Dailycov3[,4:6]
Max.temp<-Dailycov3[,7:9]
Mean.hum<-Dailycov3[,10:12]
Mean.temp<-Dailycov3[,13:15]
Min.hum<-Dailycov3[,16:18]
Min.temp<-Dailycov3[,19:21]
Sd.hum<-Dailycov3[,22:24]
Sd.temp<-Dailycov3[,25:27]
Dailycov3<- list(Julian,Max.hum, Max.temp, Mean.hum,Mean.temp, Min.hum, Min.temp, Sd.hum, Sd.temp)
names(Dailycov3) <- c("Julian", "Maxhum","Maxtemp","Meanhum", "Meantemp","Minhum","Mintemp","sdhum","sdtemp")
BatOccu <- read.csv("~/Documents/PlumasApp/PlumasBatsApp/BatOccu.csv")
#N=49
BatOccuLaBl<-BatOccu[,20:22]
SimOccuLaBl2<-unmarkedFrameOccu(y = BatOccuLaBl, siteCovs =sampling.cov2, obsCovs=Dailycov3)
model.Occu1.La.Bl2 <- occu(~ I(Julian^2) + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Distance.to.water + I(Distance.to.water^2) + Distance.to.road + I(Distance.to.road^2) + Existing.vegetation +I(Existing.vegetation^2) + Altitude + I(Altitude^2) ,SimOccuLaBl2)
select.La.Bl2 <- dredge(model.Occu1.La.Bl2, rank = "AICc")
best2.La.Bl2<-get.models(select.La.Bl2, 1)[[1]]
screenreg(extract(subset(select.La.Bl2, delta <= 2, recalc.weights = FALSE)), file= "labl.txt")
## Long-eared Bat (*Myotis evotis*)
BatOccuMyEv<-BatOccu[,23:25]
#N=49
SimOccuMyEv2<-unmarkedFrameOccu(y = BatOccuMyEv, siteCovs =sampling.cov2, obsCovs=Dailycov3)
model.Occu1.My.Ev2 <- occu(~ I(Julian^2) + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Distance.to.water + I(Distance.to.water^2) + Distance.to.road + I(Distance.to.road^2) + Existing.vegetation +I(Existing.vegetation^2) + Altitude + I(Altitude^2), SimOccuMyEv2)
select.My.Ev2 <- dredge(model.Occu1.My.Ev2, rank = "AICc")
best2.My.Ev2<-get.models(select.My.Ev2, 1)[[1]]
screenreg(extract(subset(select.My.Ev2, delta <= 2, recalc.weights = FALSE)), file= "myev.txt")
## Pallid Bat (*Antrozous pallidus*)
#N=49
BatOccuAnPa<-BatOccu[,26:28]
SimOccuAnPa2<-unmarkedFrameOccu(y = BatOccuAnPa, siteCovs =sampling.cov2, obsCovs=Dailycov3)
model.Occu1.An.Pa2 <- occu(~ I(Julian^2) + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Distance.to.water + I(Distance.to.water^2) + Distance.to.road + I(Distance.to.road^2) + Existing.vegetation +I(Existing.vegetation^2) + Altitude + I(Altitude^2), SimOccuAnPa2)
select.An.Pa2 <- dredge(model.Occu1.An.Pa2, rank = "AICc")
best2.An.Pa2<-get.models(select.An.Pa2, 1)[[1]]
library(texreg)
screenreg(extract(subset(select.An.Pa2, delta <= 2, recalc.weights = FALSE)), file= "anpa.txt")
screenreg(extract(subset(select.La.Bl2, delta <= 2, recalc.weights = FALSE)), file= "labl.txt")
screenreg(extract(subset(select.La.Bl2, delta <= 2, recalc.weights = FALSE)))
screenreg(extract(subset(select.My.Ev2, delta <= 2, recalc.weights = FALSE)), file= "myev.txt")
screenreg(extract(subset(select.My.Ev2, delta <= 2, recalc.weights = FALSE)))
screenreg(extract(subset(select.An.Pa2, delta <= 2, recalc.weights = FALSE)))
best2.La.Bl2
best2.My.Ev2
best2.An.Pa2
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?renderDataTable
?dataTableOutput
shiny::runApp()
?c
?round
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
